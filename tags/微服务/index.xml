<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>微服务 on Aaron 的博客</title>
    <link>https://recordnote.github.io/tags/%E5%BE%AE%E6%9C%8D%E5%8A%A1/</link>
    <description>Recent content in 微服务 on Aaron 的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-Hans</language>
    <copyright>&lt;a rel=&#34;license&#34; href=&#34;http://creativecommons.org/licenses/by-nc-sa/4.0/&#34;&gt;&lt;img alt=&#34;知识共享许可协议&#34; style=&#34;border-width:0&#34; src=&#34;https://i.creativecommons.org/l/by-nc-sa/4.0/88x31.png&#34; /&gt;&lt;/a&gt;&lt;br /&gt;本作品采用&lt;a rel=&#34;license&#34; href=&#34;http://creativecommons.org/licenses/by-nc-sa/4.0/&#34;&gt;知识共享署名-非商业性使用-相同方式共享 4.0 国际许可协议&lt;/a&gt;进行许可。&lt;br /&gt;&lt;br /&gt;背景使用了 &lt;a href=&#34;https://www.pexels.com/zh-cn/&#34; target=&#34;_blank&#34;&gt;Pexels&lt;/a&gt; 上 &lt;a href=&#34;https://www.pexels.com/zh-cn/Ungaro&#34; target=&#34;_blank&#34;&gt;Francesco Ungaro&lt;/a&gt; 拍摄的&lt;a href=&#34;https://www.pexels.com/zh-cn/photo/1454794/&#34; target=&#34;_blank&#34;&gt;图片&lt;/a&gt;。</copyright>
    <lastBuildDate>Sun, 25 Jun 2023 14:21:26 +0800</lastBuildDate><atom:link href="https://recordnote.github.io/tags/%E5%BE%AE%E6%9C%8D%E5%8A%A1/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Spring Cloud 总结</title>
      <link>https://recordnote.github.io/spring-cloud-alibaba/springcloud%E7%BB%84%E4%BB%B6/</link>
      <pubDate>Sun, 25 Jun 2023 14:21:26 +0800</pubDate>
      
      <guid>https://recordnote.github.io/spring-cloud-alibaba/springcloud%E7%BB%84%E4%BB%B6/</guid>
      <description>首先我给大家看一张图，如果大家对这张图有些地方不太理解的话，我希望你们看完我这篇文章会恍然大悟。 什么是Spring cloud 构建分布式系统不需要复杂</description>
    </item>
    
    <item>
      <title>Sentinel（轻量级的流量控制、熔断降级Java库）</title>
      <link>https://recordnote.github.io/spring-cloud-alibaba/sentinel%E8%BD%BB%E9%87%8F%E7%BA%A7%E7%9A%84%E6%B5%81%E9%87%8F%E6%8E%A7%E5%88%B6%E7%86%94%E6%96%AD%E9%99%8D%E7%BA%A7java%E5%BA%93/</link>
      <pubDate>Wed, 08 Mar 2023 14:21:26 +0800</pubDate>
      
      <guid>https://recordnote.github.io/spring-cloud-alibaba/sentinel%E8%BD%BB%E9%87%8F%E7%BA%A7%E7%9A%84%E6%B5%81%E9%87%8F%E6%8E%A7%E5%88%B6%E7%86%94%E6%96%AD%E9%99%8D%E7%BA%A7java%E5%BA%93/</guid>
      <description>​ 1、雪崩效应（级联失效、级联故障） 2、服务容错的思想 超时 限流 仓壁模式（类似于为每个被调用的服务端api接口设置相应数量的线程池，当某个接口</description>
    </item>
    
    <item>
      <title>负载均衡</title>
      <link>https://recordnote.github.io/spring-cloud-alibaba/%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1/</link>
      <pubDate>Mon, 23 Jan 2023 14:21:26 +0800</pubDate>
      
      <guid>https://recordnote.github.io/spring-cloud-alibaba/%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1/</guid>
      <description>一、负载均衡的两种方式 二、Ribbon ribbon支持的配置： 例如： 内置的负载均衡规则，默认ZoneAvoidanceRule 扩展Ribbo</description>
    </item>
    
    <item>
      <title>小程序项目架构</title>
      <link>https://recordnote.github.io/spring-cloud-alibaba/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E9%A1%B9%E7%9B%AE%E6%9E%B6%E6%9E%84/</link>
      <pubDate>Tue, 01 Feb 2022 14:21:26 +0800</pubDate>
      
      <guid>https://recordnote.github.io/spring-cloud-alibaba/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E9%A1%B9%E7%9B%AE%E6%9E%B6%E6%9E%84/</guid>
      <description>一、项目架构 &amp;gt; 二、数据库模型 三、技术选型及项目层级 项目层级： 四、业务</description>
    </item>
    
    <item>
      <title>Feign 声明式HTTP客户端</title>
      <link>https://recordnote.github.io/spring-cloud-alibaba/feign/</link>
      <pubDate>Sat, 01 Jan 2022 14:21:26 +0800</pubDate>
      
      <guid>https://recordnote.github.io/spring-cloud-alibaba/feign/</guid>
      <description>1、定义 Feign是Netflix开源的声明式HTTP客户端 全局代码&amp;lt;全局属性&amp;lt;细粒度代码&amp;lt;细粒度属性 Feign常见问题总</description>
    </item>
    
    <item>
      <title>单体架构与微服务架构</title>
      <link>https://recordnote.github.io/spring-cloud-alibaba/%E5%8D%95%E4%BD%93%E6%9E%B6%E6%9E%84%E4%B8%8E%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%9E%B6%E6%9E%84/</link>
      <pubDate>Sat, 01 Jan 2022 14:21:26 +0800</pubDate>
      
      <guid>https://recordnote.github.io/spring-cloud-alibaba/%E5%8D%95%E4%BD%93%E6%9E%B6%E6%9E%84%E4%B8%8E%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%9E%B6%E6%9E%84/</guid>
      <description>一、单体架构 1、优点： 架构简单 开发、测试、部署方便 2、缺点： 复杂性高 部署慢，频率低 扩展能力受限 阻碍技术创新 二、微服务 1、简单定义： ​ 微服务架</description>
    </item>
    
  </channel>
</rss>
