<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Javas on Lin 的博客</title>
    <link>https://recordnote.github.io/java/</link>
    <description>Recent content in Javas on Lin 的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-Hans</language>
    <copyright>&lt;a rel=&#34;license&#34; href=&#34;http://creativecommons.org/licenses/by-nc-sa/4.0/&#34;&gt;&lt;img alt=&#34;知识共享许可协议&#34; style=&#34;border-width:0&#34; src=&#34;https://i.creativecommons.org/l/by-nc-sa/4.0/88x31.png&#34; /&gt;&lt;/a&gt;&lt;br /&gt;本作品采用&lt;a rel=&#34;license&#34; href=&#34;http://creativecommons.org/licenses/by-nc-sa/4.0/&#34;&gt;知识共享署名-非商业性使用-相同方式共享 4.0 国际许可协议&lt;/a&gt;进行许可。&lt;br /&gt;&lt;br /&gt;背景使用了 &lt;a href=&#34;https://www.pexels.com/zh-cn/&#34; target=&#34;_blank&#34;&gt;Pexels&lt;/a&gt; 上 &lt;a href=&#34;https://www.pexels.com/zh-cn/Ungaro&#34; target=&#34;_blank&#34;&gt;Francesco Ungaro&lt;/a&gt; 拍摄的&lt;a href=&#34;https://www.pexels.com/zh-cn/photo/1454794/&#34; target=&#34;_blank&#34;&gt;图片&lt;/a&gt;。</copyright>
    <lastBuildDate>Sat, 15 Mar 2025 14:21:26 +0800</lastBuildDate><atom:link href="https://recordnote.github.io/java/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Java 21 新特性概览(重要)</title>
      <link>https://recordnote.github.io/java/java-21-%E6%96%B0%E7%89%B9%E6%80%A7%E6%A6%82%E8%A7%88%E9%87%8D%E8%A6%81/</link>
      <pubDate>Sat, 15 Mar 2025 14:21:26 +0800</pubDate>
      
      <guid>https://recordnote.github.io/java/java-21-%E6%96%B0%E7%89%B9%E6%80%A7%E6%A6%82%E8%A7%88%E9%87%8D%E8%A6%81/</guid>
      <description>Java 21 新特性概览 1. JDK 21 概述 • 发布信息：2023年9月19日发布，是长期支持版本（LTS），目前LTS版本包括JDK 8、11、17和21。 • 核心</description>
    </item>
    
    <item>
      <title>Java 17 新特性概览（重要）</title>
      <link>https://recordnote.github.io/java/java-17-%E6%96%B0%E7%89%B9%E6%80%A7%E6%A6%82%E8%A7%88%E9%87%8D%E8%A6%81/</link>
      <pubDate>Thu, 20 Feb 2025 14:21:26 +0800</pubDate>
      
      <guid>https://recordnote.github.io/java/java-17-%E6%96%B0%E7%89%B9%E6%80%A7%E6%A6%82%E8%A7%88%E9%87%8D%E8%A6%81/</guid>
      <description>Java 17 新特性概览 一、版本背景与重要性 • 长期支持（LTS）：Java 17 是自 2021 年 9 月发布的 LTS 版本，支持至 2029 年 9 月，是继 Java 8 后最重要的 LTS 版本。 • 生态</description>
    </item>
    
    <item>
      <title>类加载器详解（重点）</title>
      <link>https://recordnote.github.io/java/%E7%B1%BB%E5%8A%A0%E8%BD%BD%E5%99%A8%E8%AF%A6%E8%A7%A3%E9%87%8D%E7%82%B9/</link>
      <pubDate>Fri, 30 Aug 2024 14:21:26 +0800</pubDate>
      
      <guid>https://recordnote.github.io/java/%E7%B1%BB%E5%8A%A0%E8%BD%BD%E5%99%A8%E8%AF%A6%E8%A7%A3%E9%87%8D%E7%82%B9/</guid>
      <description>类加载器详解 一、类加载过程回顾 1.1 核心三阶段 • 加载：获取类的二进制字节流 → 转换为方法区数据结构 → 生成Class对象 • 连接 • 验证：文件格式、元数</description>
    </item>
    
    <item>
      <title>JVM垃圾回收详解（重点）</title>
      <link>https://recordnote.github.io/java/jvm%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6%E8%AF%A6%E8%A7%A3%E9%87%8D%E7%82%B9/</link>
      <pubDate>Wed, 21 Aug 2024 14:21:26 +0800</pubDate>
      
      <guid>https://recordnote.github.io/java/jvm%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6%E8%AF%A6%E8%A7%A3%E9%87%8D%E7%82%B9/</guid>
      <description>JVM垃圾回收详解（HotSpot虚拟机） 一、对象存活判定 引用计数法 • 原理：为对象添加引用计数器，引用时+1，失效时-1，计数器为0时判定可</description>
    </item>
    
    <item>
      <title>Java内存区域详解（重点）</title>
      <link>https://recordnote.github.io/java/java%E5%86%85%E5%AD%98%E5%8C%BA%E5%9F%9F%E8%AF%A6%E8%A7%A3%E9%87%8D%E7%82%B9/</link>
      <pubDate>Sun, 11 Aug 2024 14:21:26 +0800</pubDate>
      
      <guid>https://recordnote.github.io/java/java%E5%86%85%E5%AD%98%E5%8C%BA%E5%9F%9F%E8%AF%A6%E8%A7%A3%E9%87%8D%E7%82%B9/</guid>
      <description>Java 内存区域详解（基于 HotSpot 虚拟机） 一、运行时数据区概述 Java 虚拟机（JVM）将内存划分为不同的数据区域，用于管理程序运行时的内存分配。根据 JDK 1.8 的规范</description>
    </item>
    
    <item>
      <title>Java 11 新特性概览</title>
      <link>https://recordnote.github.io/java/java-11-%E6%96%B0%E7%89%B9%E6%80%A7%E6%A6%82%E8%A7%88/</link>
      <pubDate>Tue, 11 Jun 2024 14:21:26 +0800</pubDate>
      
      <guid>https://recordnote.github.io/java/java-11-%E6%96%B0%E7%89%B9%E6%80%A7%E6%A6%82%E8%A7%88/</guid>
      <description>Java 11 新特性概览 发布与支持 发布时间：2018年9月25日 长期支持（LTS）：Oracle官方支持至2026年9月 历史定位：Java 8之后首个长</description>
    </item>
    
    <item>
      <title>Java 8 新特性实战指南</title>
      <link>https://recordnote.github.io/java/java8-%E6%96%B0%E7%89%B9%E6%80%A7%E5%AE%9E%E6%88%98/</link>
      <pubDate>Sat, 18 May 2024 14:21:26 +0800</pubDate>
      
      <guid>https://recordnote.github.io/java/java8-%E6%96%B0%E7%89%B9%E6%80%A7%E5%AE%9E%E6%88%98/</guid>
      <description>Java 8 新特性实战指南 目录 接口的默认方法与静态方法 函数式接口与Lambda表达式 Stream API Optional类 新的日期时间API 接口的默认方法与静态方法</description>
    </item>
    
    <item>
      <title>RockerMQ总结</title>
      <link>https://recordnote.github.io/java/mq/</link>
      <pubDate>Wed, 15 Nov 2023 14:21:26 +0800</pubDate>
      
      <guid>https://recordnote.github.io/java/mq/</guid>
      <description>消息队列扫盲 消息队列顾名思义就是存放消息的队列， 消息队列为什么会出现？消息队列能用来干什么？用它来干这些事会带来什么好处？消息队列会带来副作</description>
    </item>
    
    <item>
      <title>SpringBoot实现动态控制定时任务--支持多参数</title>
      <link>https://recordnote.github.io/java/springboot%E5%AE%9E%E7%8E%B0%E5%8A%A8%E6%80%81%E6%8E%A7%E5%88%B6%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1-%E6%94%AF%E6%8C%81%E5%A4%9A%E5%8F%82%E6%95%B0/</link>
      <pubDate>Sat, 28 Oct 2023 14:21:26 +0800</pubDate>
      
      <guid>https://recordnote.github.io/java/springboot%E5%AE%9E%E7%8E%B0%E5%8A%A8%E6%80%81%E6%8E%A7%E5%88%B6%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1-%E6%94%AF%E6%8C%81%E5%A4%9A%E5%8F%82%E6%95%B0/</guid>
      <description>由于工作上的原因，需要进行定时任务的动态增删改查，网上大部分资料都是整合quertz框架实现的。查阅了一些资料，发现springBoot本身</description>
    </item>
    
    <item>
      <title>jdk8特性-Stream常用方法和特性</title>
      <link>https://recordnote.github.io/java/jdk8%E6%96%B0%E7%89%B9%E6%80%A7-stream%E5%B8%B8%E7%94%A8%E6%96%B9%E6%B3%95%E5%92%8C%E7%89%B9%E6%80%A7/</link>
      <pubDate>Wed, 18 Oct 2023 14:21:26 +0800</pubDate>
      
      <guid>https://recordnote.github.io/java/jdk8%E6%96%B0%E7%89%B9%E6%80%A7-stream%E5%B8%B8%E7%94%A8%E6%96%B9%E6%B3%95%E5%92%8C%E7%89%B9%E6%80%A7/</guid>
      <description>Stream介绍 先说下Stream的优势：它是java对集合操作的优化，相较于迭代器，使用Stream的速度非常快，并且它支持并行方式处理集</description>
    </item>
    
    <item>
      <title>MVVC多版本并发控制</title>
      <link>https://recordnote.github.io/java/mvcc/</link>
      <pubDate>Thu, 28 Sep 2023 14:21:26 +0800</pubDate>
      
      <guid>https://recordnote.github.io/java/mvcc/</guid>
      <description>MVCC 是什么？ 数据库并发控制——锁 Multiversion (version) concurrency control (MCC or MVCC) 多版本并发控制 ，它是数据库管理系统一种常见的并发控制。 我们知道并发控制常用的是锁，当线程要对一个</description>
    </item>
    
    <item>
      <title>Java代理模式详解</title>
      <link>https://recordnote.github.io/java/java%E4%BB%A3%E7%90%86%E6%A8%A1%E5%BC%8F%E8%AF%A6%E8%A7%A3/</link>
      <pubDate>Fri, 01 Sep 2023 14:21:26 +0800</pubDate>
      
      <guid>https://recordnote.github.io/java/java%E4%BB%A3%E7%90%86%E6%A8%A1%E5%BC%8F%E8%AF%A6%E8%A7%A3/</guid>
      <description>1. 代理模式 代理模式是一种比较好理解的设计模式。简单来说就是 我们使用代理对象来代替对真实对象(real object)的访问，这样就可以在不修改</description>
    </item>
    
    <item>
      <title>MySQL中的索引和锁</title>
      <link>https://recordnote.github.io/java/mysql%E4%B8%AD%E7%9A%84%E7%B4%A2%E5%BC%95%E5%92%8C%E9%94%81/</link>
      <pubDate>Wed, 30 Aug 2023 14:21:26 +0800</pubDate>
      
      <guid>https://recordnote.github.io/java/mysql%E4%B8%AD%E7%9A%84%E7%B4%A2%E5%BC%95%E5%92%8C%E9%94%81/</guid>
      <description>索引 索引常见的几种类型 索引常见的类型有哈希索引，有序数组索引，二叉树索引，跳表等等。本文主要探讨 MySQL 的默认存储引擎 InnoDB 的索引结构。 InnoDB的</description>
    </item>
    
    <item>
      <title>jdk8新特性-Optional类</title>
      <link>https://recordnote.github.io/java/jdk8%E6%96%B0%E7%89%B9%E6%80%A7-optional%E7%B1%BB/</link>
      <pubDate>Mon, 14 Aug 2023 14:21:26 +0800</pubDate>
      
      <guid>https://recordnote.github.io/java/jdk8%E6%96%B0%E7%89%B9%E6%80%A7-optional%E7%B1%BB/</guid>
      <description>1、定义 ​ Optional 类 (java.util.Optional) 是一个容器类，代表一个值存在或不存在，原来用 null 表示一个值不存在，现在用 Optional 可以更好的表达这个概念；并且可以避免空指针异常 2、常</description>
    </item>
    
    <item>
      <title>多线程</title>
      <link>https://recordnote.github.io/java/threadjuc/thread/</link>
      <pubDate>Thu, 01 Jun 2023 14:21:26 +0800</pubDate>
      
      <guid>https://recordnote.github.io/java/threadjuc/thread/</guid>
      <description>1、线程实现的方式及其优缺点？ 1）继承Thread类 2）实现Runnable接口 3）实现Callable（JDK&amp;gt;=1.5） 4）使用线</description>
    </item>
    
    <item>
      <title>hashcode总结</title>
      <link>https://recordnote.github.io/java/hashcode/</link>
      <pubDate>Sat, 13 May 2023 14:21:26 +0800</pubDate>
      
      <guid>https://recordnote.github.io/java/hashcode/</guid>
      <description>一、hashcode是什么？ 1、hash和hash表是什么？ ​ 想要知道这个hashcode，首先得知道hash，通过百度百科看一下 ​ ​ ​ ha</description>
    </item>
    
    <item>
      <title>java基础知识</title>
      <link>https://recordnote.github.io/java/java%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</link>
      <pubDate>Mon, 23 May 2022 14:21:26 +0800</pubDate>
      
      <guid>https://recordnote.github.io/java/java%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</guid>
      <description>Java 泛型了解么？什么是类型擦除？介绍一下常用的通配符？ Java 泛型（generics）是 JDK 5 中引入的一个新特性, 泛型提供了编译时类型安全检测机制，该</description>
    </item>
    
  </channel>
</rss>
