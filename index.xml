<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Aaron 的博客</title>
    <link>https://recordnote.github.io/</link>
    <description>Recent content on Aaron 的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-Hans</language>
    <copyright>&lt;a rel=&#34;license&#34; href=&#34;http://creativecommons.org/licenses/by-nc-sa/4.0/&#34;&gt;&lt;img alt=&#34;知识共享许可协议&#34; style=&#34;border-width:0&#34; src=&#34;https://i.creativecommons.org/l/by-nc-sa/4.0/88x31.png&#34; /&gt;&lt;/a&gt;&lt;br /&gt;本作品采用&lt;a rel=&#34;license&#34; href=&#34;http://creativecommons.org/licenses/by-nc-sa/4.0/&#34;&gt;知识共享署名-非商业性使用-相同方式共享 4.0 国际许可协议&lt;/a&gt;进行许可。&lt;br /&gt;&lt;br /&gt;背景使用了 &lt;a href=&#34;https://www.pexels.com/zh-cn/&#34; target=&#34;_blank&#34;&gt;Pexels&lt;/a&gt; 上 &lt;a href=&#34;https://www.pexels.com/zh-cn/Ungaro&#34; target=&#34;_blank&#34;&gt;Francesco Ungaro&lt;/a&gt; 拍摄的&lt;a href=&#34;https://www.pexels.com/zh-cn/photo/1454794/&#34; target=&#34;_blank&#34;&gt;图片&lt;/a&gt;。</copyright>
    <lastBuildDate>Sat, 03 Jul 2021 14:21:26 +0800</lastBuildDate><atom:link href="https://recordnote.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>人机关系到跨人际主体间关系</title>
      <link>https://recordnote.github.io/%E6%9D%82%E8%B0%88/%E4%BA%BA%E6%9C%BA%E5%85%B3%E7%B3%BB%E5%88%B0%E8%B7%A8%E4%BA%BA%E9%99%85%E4%B8%BB%E4%BD%93%E9%97%B4%E5%85%B3%E7%B3%BB/</link>
      <pubDate>Sat, 03 Jul 2021 14:21:26 +0800</pubDate>
      
      <guid>https://recordnote.github.io/%E6%9D%82%E8%B0%88/%E4%BA%BA%E6%9C%BA%E5%85%B3%E7%B3%BB%E5%88%B0%E8%B7%A8%E4%BA%BA%E9%99%85%E4%B8%BB%E4%BD%93%E9%97%B4%E5%85%B3%E7%B3%BB/</guid>
      <description>为了实现人机之间、人际之间任意时间、任意地点、任意语言的无障碍自由通讯的梦想,我们终日绞尽脑汁,时空距离被极大地压缩。但是,人与人之间的心理</description>
    </item>
    
    <item>
      <title>sql如何拼接数据</title>
      <link>https://recordnote.github.io/%E6%95%B0%E6%8D%AE%E5%BA%93/sql%E5%A6%82%E4%BD%95%E6%8B%BC%E6%8E%A5%E6%95%B0%E6%8D%AE/</link>
      <pubDate>Tue, 23 Feb 2021 14:21:26 +0800</pubDate>
      
      <guid>https://recordnote.github.io/%E6%95%B0%E6%8D%AE%E5%BA%93/sql%E5%A6%82%E4%BD%95%E6%8B%BC%E6%8E%A5%E6%95%B0%E6%8D%AE/</guid>
      <description>数据库中的例子表格： 1.符号 + 在MySQL中支持使用加号拼接结果。在两个字段都是整型时，都会返回两个整型值得和，但是在两个字段中有一个为字符</description>
    </item>
    
    <item>
      <title>小程序项目架构</title>
      <link>https://recordnote.github.io/spring-cloud-alibaba/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E9%A1%B9%E7%9B%AE%E6%9E%B6%E6%9E%84/</link>
      <pubDate>Mon, 01 Feb 2021 14:21:26 +0800</pubDate>
      
      <guid>https://recordnote.github.io/spring-cloud-alibaba/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E9%A1%B9%E7%9B%AE%E6%9E%B6%E6%9E%84/</guid>
      <description>一、项目架构 &amp;gt; 二、数据库模型 三、技术选型及项目层级 项目层级： 四、业务</description>
    </item>
    
    <item>
      <title>如果让你写一个消息队列，该如何进行架构设计？</title>
      <link>https://recordnote.github.io/mq/mq-design/</link>
      <pubDate>Thu, 28 Jan 2021 14:21:26 +0800</pubDate>
      
      <guid>https://recordnote.github.io/mq/mq-design/</guid>
      <description>可以从下几个角度来考虑一下： 首先这个 mq 得支持可伸缩性吧，就是需要的时候快速扩容，就可以增加吞吐量和容量，那怎么搞？设计个分布式的系统呗，参照</description>
    </item>
    
    <item>
      <title>如何保证消息的可靠性传输？（处理消息丢失的问题）</title>
      <link>https://recordnote.github.io/mq/how-to-ensure-the-reliable-transmission-of-messages/</link>
      <pubDate>Wed, 27 Jan 2021 14:21:26 +0800</pubDate>
      
      <guid>https://recordnote.github.io/mq/how-to-ensure-the-reliable-transmission-of-messages/</guid>
      <description>问题分析 数据的丢失问题，可能出现在生产者、MQ、消费者中，咱们从 RabbitMQ 和 Kafka 分别来分析一下吧。 RabbitMQ 生产者弄丢了数据 生产者将数据发送到 RabbitMQ 的时候，可能数</description>
    </item>
    
    <item>
      <title>如何解决消息队列的延时以及过期失效问题？消息队列满了以后该怎么处理？</title>
      <link>https://recordnote.github.io/mq/mq-time-delay-and-expired-failure/</link>
      <pubDate>Wed, 27 Jan 2021 14:21:26 +0800</pubDate>
      
      <guid>https://recordnote.github.io/mq/mq-time-delay-and-expired-failure/</guid>
      <description>大量消息在 mq 里积压了几个小时了还没解决 几千万条数据在 MQ 里积压了七八个小时，从下午 4 点多，积压到了晚上 11 点多。这个是真实遇到过的一个场景，确实</description>
    </item>
    
    <item>
      <title>如何保证消息的顺序性？</title>
      <link>https://recordnote.github.io/mq/how-to-ensure-the-order-of-messages/</link>
      <pubDate>Tue, 26 Jan 2021 14:21:26 +0800</pubDate>
      
      <guid>https://recordnote.github.io/mq/how-to-ensure-the-order-of-messages/</guid>
      <description>线上系统场景案例 以前做过一个 mysql binlog 同步的系统，压力还是非常大的，日同步数据要达到上亿，就是说数据从一个 mysql 库原封不动地同步到另一个 mysql 库里面去（m</description>
    </item>
    
    <item>
      <title>如何保证消息不被重复消费？（如何保证消息消费的幂等性）</title>
      <link>https://recordnote.github.io/mq/how-to-ensure-that-messages-are-not-repeatedly-consumed/</link>
      <pubDate>Mon, 25 Jan 2021 14:21:26 +0800</pubDate>
      
      <guid>https://recordnote.github.io/mq/how-to-ensure-that-messages-are-not-repeatedly-consumed/</guid>
      <description>首先，比如 RabbitMQ、RocketMQ、Kafka，都有可能会出现消息重复消费的问题，正常。因为这问题通常不是 MQ 自己保证的，是由我们开</description>
    </item>
    
    <item>
      <title>如何保证消息队列的高可用？</title>
      <link>https://recordnote.github.io/mq/how-to-ensure-high-availability-of-message-queues/</link>
      <pubDate>Sun, 24 Jan 2021 14:21:26 +0800</pubDate>
      
      <guid>https://recordnote.github.io/mq/how-to-ensure-high-availability-of-message-queues/</guid>
      <description>RabbitMQ 的高可用性 RabbitMQ 是比较有代表性的，因为是基于主从（非分布式）做高可用性的，我们就以 RabbitMQ 为例子讲解第一种 MQ 的高可用性怎么实现。 RabbitMQ 有三种模式：单机模</description>
    </item>
    
    <item>
      <title>单体架构与微服务架构</title>
      <link>https://recordnote.github.io/spring-cloud-alibaba/%E5%8D%95%E4%BD%93%E6%9E%B6%E6%9E%84%E4%B8%8E%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%9E%B6%E6%9E%84/</link>
      <pubDate>Fri, 01 Jan 2021 14:21:26 +0800</pubDate>
      
      <guid>https://recordnote.github.io/spring-cloud-alibaba/%E5%8D%95%E4%BD%93%E6%9E%B6%E6%9E%84%E4%B8%8E%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%9E%B6%E6%9E%84/</guid>
      <description>一、单体架构 1、优点： 架构简单 开发、测试、部署方便 2、缺点： 复杂性高 部署慢，频率低 扩展能力受限 阻碍技术创新 二、微服务 1、简单定义： ​ 微服务架</description>
    </item>
    
    <item>
      <title>Spring Boot Actuator:健康检查、审计、统计和监控</title>
      <link>https://recordnote.github.io/spring-cloud-alibaba/spring-actuator/</link>
      <pubDate>Tue, 01 Dec 2020 14:21:26 +0800</pubDate>
      
      <guid>https://recordnote.github.io/spring-cloud-alibaba/spring-actuator/</guid>
      <description>Spring Boot Actuator可以帮助你监控和管理Spring Boot应用，比如健康检查、审计、统计和HTTP追踪等。所有的这些特性可以通过JMX或者</description>
    </item>
    
    <item>
      <title>spring常用注解</title>
      <link>https://recordnote.github.io/spring-cloud-alibaba/spring%E5%B8%B8%E7%94%A8%E6%B3%A8%E8%A7%A3/</link>
      <pubDate>Mon, 23 Nov 2020 14:21:26 +0800</pubDate>
      
      <guid>https://recordnote.github.io/spring-cloud-alibaba/spring%E5%B8%B8%E7%94%A8%E6%B3%A8%E8%A7%A3/</guid>
      <description>一、@Resource和@Autowired的区别 1、@Autowired与@Resource都可以用来装配bean. 都可以写在字段上,或写</description>
    </item>
    
    <item>
      <title>jdk8新特性-Optional类</title>
      <link>https://recordnote.github.io/java/jdk8%E6%96%B0%E7%89%B9%E6%80%A7-optional%E7%B1%BB/</link>
      <pubDate>Thu, 23 Jul 2020 14:21:26 +0800</pubDate>
      
      <guid>https://recordnote.github.io/java/jdk8%E6%96%B0%E7%89%B9%E6%80%A7-optional%E7%B1%BB/</guid>
      <description>1、定义 ​ Optional 类 (java.util.Optional) 是一个容器类，代表一个值存在或不存在，原来用 null 表示一个值不存在，现在用 Optional 可以更好的表达这个概念；并且可以避免空指针异常 2、常</description>
    </item>
    
    <item>
      <title>jdk8新特性-Stream常用方法和特性</title>
      <link>https://recordnote.github.io/java/jdk8%E6%96%B0%E7%89%B9%E6%80%A7-stream%E5%B8%B8%E7%94%A8%E6%96%B9%E6%B3%95%E5%92%8C%E7%89%B9%E6%80%A7/</link>
      <pubDate>Thu, 23 Jul 2020 14:21:26 +0800</pubDate>
      
      <guid>https://recordnote.github.io/java/jdk8%E6%96%B0%E7%89%B9%E6%80%A7-stream%E5%B8%B8%E7%94%A8%E6%96%B9%E6%B3%95%E5%92%8C%E7%89%B9%E6%80%A7/</guid>
      <description>Stream介绍 先说下Stream的优势：它是java对集合操作的优化，相较于迭代器，使用Stream的速度非常快，并且它支持并行方式处理集</description>
    </item>
    
    <item>
      <title>为什么使用消息队列</title>
      <link>https://recordnote.github.io/mq/why-mq/</link>
      <pubDate>Sat, 23 Jan 2021 14:21:26 +0800</pubDate>
      
      <guid>https://recordnote.github.io/mq/why-mq/</guid>
      <description>为什么使用消息队列 消息队列有很多常见的使用场景，但是比较核心的有 3 个：解耦、异步、削峰。 解耦 看这么个场景。A 系统发送数据到 BCD 三个系统，通过接</description>
    </item>
    
    <item>
      <title>Build a Chrome Extension with Figwheel Main</title>
      <link>https://recordnote.github.io/posts/build-a-chrome-extension-with-figwheel-main/</link>
      <pubDate>Tue, 12 Jan 2021 23:54:31 +0800</pubDate>
      
      <guid>https://recordnote.github.io/posts/build-a-chrome-extension-with-figwheel-main/</guid>
      <description>&lt;p&gt;Bring a smooth experience to the development of Chrome Extension.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>2020年的总结</title>
      <link>https://recordnote.github.io/posts/2020%E5%B9%B4%E7%9A%84%E6%80%BB%E7%BB%93/</link>
      <pubDate>Tue, 05 Jan 2021 21:52:44 +0800</pubDate>
      
      <guid>https://recordnote.github.io/posts/2020%E5%B9%B4%E7%9A%84%E6%80%BB%E7%BB%93/</guid>
      <description>&lt;p&gt;2020 in a review.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>如何冥想？2500年的智慧-荒岛十日记（转载）</title>
      <link>https://recordnote.github.io/posts/%E8%BD%AC%E8%BD%BD-%E5%A6%82%E4%BD%95%E5%86%A5%E6%83%B3-2500%E5%B9%B4%E7%9A%84%E6%99%BA%E6%85%A7-%E8%8D%92%E5%B2%9B%E5%8D%81%E6%97%A5%E8%AE%B0/</link>
      <pubDate>Fri, 20 Mar 2020 22:02:47 +0800</pubDate>
      
      <guid>https://recordnote.github.io/posts/%E8%BD%AC%E8%BD%BD-%E5%A6%82%E4%BD%95%E5%86%A5%E6%83%B3-2500%E5%B9%B4%E7%9A%84%E6%99%BA%E6%85%A7-%E8%8D%92%E5%B2%9B%E5%8D%81%E6%97%A5%E8%AE%B0/</guid>
      <description>&lt;p&gt;这个曾经启发了我很多的博客，因为前几天发现它的网站 down 掉了，所以在此保存一份副本，侵删。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>2019年的总结</title>
      <link>https://recordnote.github.io/posts/2019%E5%B9%B4%E7%9A%84%E6%80%BB%E7%BB%93/</link>
      <pubDate>Mon, 30 Dec 2019 21:24:06 +0800</pubDate>
      
      <guid>https://recordnote.github.io/posts/2019%E5%B9%B4%E7%9A%84%E6%80%BB%E7%BB%93/</guid>
      <description>&lt;p&gt;2019 in a review.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>禅修一</title>
      <link>https://recordnote.github.io/posts/%E7%A6%85%E4%BF%AE-%E7%9F%A5%E8%A1%8C%E5%90%88%E4%B8%80/</link>
      <pubDate>Sat, 28 Apr 2018 11:08:58 +0800</pubDate>
      
      <guid>https://recordnote.github.io/posts/%E7%A6%85%E4%BF%AE-%E7%9F%A5%E8%A1%8C%E5%90%88%E4%B8%80/</guid>
      <description>&lt;p&gt;记录一下我的丹东禅修之后的收获的东西，第一部分。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
